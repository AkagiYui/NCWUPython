# 编写程序找出符合以下要求的三位正整数：分别乘以3、4、5、6、7后得到的整数的各位数字之和都相等。
# 其中计算某个正整数（不一定是三位整数）各位数字之和的过程定义成一个独立的函数实现。输出示例如下：
# X=180: x*3=540, x*4=720, x*5=900, x*6=1080, x*7=1260
# X=198: x*3=594, x*4=792, x*5=990, x*6=1188, x*7=1386
# ……
# X=999: x*3=2997, x*4=3996, x*5=4995, x*6=5994, x*7=6993
# 共有21个符合条件的三位整数。

def sum_of_digits(n):
    s = 0
    while n > 0:
        s += n % 10
        n //= 10
    return s


for i in range(100, 1000):
    if sum_of_digits(i * 3) == sum_of_digits(i * 4) == sum_of_digits(i * 5) == sum_of_digits(i * 6) == sum_of_digits(i * 7):
        print(f'X={i}: x*3={i * 3}, x*4={i * 4}, x*5={i * 5}, x*6={i * 6}, x*7={i * 7}')
